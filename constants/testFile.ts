const TEST_CASES = {
    simple_user: {
      name: "User",
      description: "Simple user profile",
      fields: [
        { name: "firstName", type: "string", required: true, description: "User's first name" },
        { name: "lastName", type: "string", required: true, description: "User's last name" },
        { name: "email", type: "string", required: true, unique: true, description: "User's email address" },
        { name: "age", type: "number", description: "User's age" },
        { name: "isActive", type: "boolean", default: "true", description: "Account status" },
        { name: "createdAt", type: "Date", default: "Date.now", description: "Account creation date" },
      ],
    },
    complex_order: {
      name: "Order",
      description: "Complex e-commerce order (like your example)",
      fields: [
        { name: "order_no", type: "string", required: true, unique: true },
        { name: "amount", type: "number", required: true },
        { name: "discount_amount", type: "number" },
        {
          name: "products",
          type: "array",
          arrayType: "object",
          nestedFields: [
            { name: "product", type: "ObjectId", ref: "Product", required: true },
            { name: "product_name", type: "string", required: true },
            { name: "quantity", type: "number", required: true },
            { name: "HSN", type: "string", required: true },
            { name: "taxable_amount", type: "number", required: true },
            { name: "gst", type: "number", required: true },
            { name: "price_per_unit", type: "number", required: true },
            { name: "final_amount", type: "number", required: true },
            { name: "original_amount", type: "number", required: true },
          ],
        },
        { name: "discounts", type: "array", arrayType: "string" },
        { name: "user", type: "ObjectId", ref: "User", required: true },
        {
          name: "status",
          type: "enum",
          enum: [
            { key: "CART_PENDING", value: "cart_pending" },
            { key: "PAYMENT_PENDING", value: "payment_pending" },
            { key: "PAID", value: "paid" },
            { key: "CREATED", value: "created" },
            { key: "PROCESSING", value: "processing" },
            { key: "DELIVERED", value: "delivered" },
            { key: "CANCELLED", value: "cancelled" },
          ],
        },
        {
          name: "payment_method",
          type: "enum",
          enum: [
            { key: "CASH_ON_DELIVERY", value: "cash_on_delivery" },
            { key: "CARD", value: "card" },
            { key: "UPI", value: "upi" },
          ],
        },
        { name: "customer_name", type: "string", required: true },
        { name: "isPaymentDone", type: "boolean", default: "false" },
        { name: "phone_number", type: "string" },
        { name: "alternate_phone_number", type: "string" },
      ],
    },
    blog_post: {
      name: "BlogPost",
      description: "Blog post with nested comments and tags",
      fields: [
        { name: "title", type: "string", required: true },
        { name: "slug", type: "string", required: true, unique: true },
        { name: "content", type: "string", required: true },
        { name: "excerpt", type: "string" },
        { name: "author", type: "ObjectId", ref: "User", required: true },
        { name: "tags", type: "array", arrayType: "string" },
        { name: "published", type: "boolean", default: "false" },
        { name: "publishedAt", type: "Date" },
        { name: "views", type: "number", default: "0" },
        { name: "likes", type: "number", default: "0" },
        {
          name: "comments",
          type: "array",
          arrayType: "object",
          nestedFields: [
            { name: "author", type: "ObjectId", ref: "User", required: true },
            { name: "content", type: "string", required: true },
            { name: "createdAt", type: "Date", default: "Date.now" },
            { name: "likes", type: "number", default: "0" },
            {
              name: "replies",
              type: "array",
              arrayType: "object",
              nestedFields: [
                { name: "author", type: "ObjectId", ref: "User", required: true },
                { name: "content", type: "string", required: true },
                { name: "createdAt", type: "Date", default: "Date.now" },
              ],
            },
          ],
        },
        {
          name: "metadata",
          type: "object",
          nestedFields: [
            { name: "seoTitle", type: "string" },
            { name: "seoDescription", type: "string" },
            { name: "socialImage", type: "string" },
            { name: "readingTime", type: "number" },
          ],
        },
      ],
    },
    social_media: {
      name: "SocialPost",
      description: "Social media post with complex interactions",
      fields: [
        { name: "content", type: "string", required: true },
        { name: "author", type: "ObjectId", ref: "User", required: true },
        { name: "media", type: "array", arrayType: "string" },
        { name: "hashtags", type: "array", arrayType: "string" },
        { name: "mentions", type: "array", arrayType: "ObjectId", ref: "User" },
        {
          name: "visibility",
          type: "enum",
          enum: [
            { key: "PUBLIC", value: "public" },
            { key: "PRIVATE", value: "private" },
            { key: "FRIENDS", value: "friends" },
          ],
        },
        {
          name: "interactions",
          type: "object",
          nestedFields: [
            { name: "likes", type: "array", arrayType: "ObjectId", ref: "User" },
            { name: "shares", type: "array", arrayType: "ObjectId", ref: "User" },
            { name: "comments", type: "array", arrayType: "ObjectId", ref: "Comment" },
            { name: "reactions", type: "Map" },
          ],
        },
        {
          name: "analytics",
          type: "object",
          nestedFields: [
            { name: "views", type: "number", default: "0" },
            { name: "engagementRate", type: "number", default: "0" },
            { name: "reach", type: "number", default: "0" },
            { name: "impressions", type: "number", default: "0" },
          ],
        },
      ],
    },
  }